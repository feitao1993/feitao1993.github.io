<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>费涛</title>
  
  <subtitle>爱设计|爱前端</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-09T03:24:14.504Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Fei Tao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>成功了</title>
    <link href="http://yoursite.com/2019/03/09/%E7%BB%88%E4%BA%8E%E6%88%90%E5%8A%9F%E4%BA%86/"/>
    <id>http://yoursite.com/2019/03/09/终于成功了/</id>
    <published>2019-03-09T12:01:21.000Z</published>
    <updated>2019-03-09T03:24:14.504Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;好久没更新博客了，今天给大家介绍一下，如何在多台设备上管理Hexo博客，经过几天的摸索和查阅资料，终于找到了一个切实可行的方法，下面把详细的过程讲一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;好久没更新博客了，今天给大家介绍一下，如何在多台设备上管理Hexo博客，经过几天的摸索和查阅资料，终于找到了一个切实可行的方法，下面把详细的过程讲一下。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>多台电脑设备同步管理Hexo博客</title>
    <link href="http://yoursite.com/2019/03/08/%E5%A4%9A%E7%BB%88%E7%AB%AF%E7%AE%A1%E7%90%86Hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/03/08/多终端管理Hexo博客/</id>
    <published>2019-03-08T12:01:21.000Z</published>
    <updated>2019-03-09T03:24:14.500Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;好久没更新博客了，今天给大家介绍一下，如何在多台设备上管理Hexo博客，经过几天的摸索和查阅资料，终于找到了一个切实可行的方法，下面把详细的过程讲一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;好久没更新博客了，今天给大家介绍一下，如何在多台设备上管理Hexo博客，经过几天的摸索和查阅资料，终于找到了一个切实可行的方法，下面把详细的过程讲一下。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows、Ubuntu双系统以及Python环境配置</title>
    <link href="http://yoursite.com/2018/11/11/double_system/"/>
    <id>http://yoursite.com/2018/11/11/double_system/</id>
    <published>2018-11-11T12:22:21.000Z</published>
    <updated>2019-03-05T13:45:32.449Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如今人工智能越来越火，python语言越来越受到重视，一般在生产环境下，服务器基本都是Liunx的，所以学习Linux系统和Python语言迫在眉睫，而在开始学习之前，我们首先得配置好Linux系统和Python运行环境，本人结合网上教程，经过了无数次重装系统，终于配好了Windows10和Ubuntu18.04双系统，以及anaconda运行环境，现在把过程记录下来，以供参考。</p><h2 id="一、安装双系统"><a href="#一、安装双系统" class="headerlink" title="一、安装双系统"></a>一、安装双系统</h2><h3 id="1）Windows系统"><a href="#1）Windows系统" class="headerlink" title="1）Windows系统"></a>1）Windows系统</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;想必windows系统大家都会安装，只要准备好windows安装包，按照引导一步一步安装即可，这里不过多介绍。</p><h3 id="2-安装Ubuntu系统"><a href="#2-安装Ubuntu系统" class="headerlink" title="2) 安装Ubuntu系统"></a>2) 安装Ubuntu系统</h3><p>   1、首先，我们需要在网上下载Ubuntu系统，下载地址：<a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">https://www.ubuntu.com/download/desktop</a></p><p>   2、准备好一个空间比较大的U盘，制作系统盘，使用软件：Ultraiso软碟通工具，首先选择“文件-打开”，选择下载好的系统镜像，然后选择“启动-写入硬盘影像”，如果默认写入方式安装系统失败，请选择写入方式为“RAW”,写完后会有相应成功提示，成功后点击返回即可。<br><img src="2018-11-11-double_system/1.jpg" alt=""><br><img src="2018-11-11-double_system/2.jpg" alt=""><br>  3、安装Ubuntu系统，首先在原系统下压缩出一个足够大的硬盘空间，本人使用100G，压缩出的空间会显示为可用空间，无盘符。接着插入U盘，重启电脑，U盘启动安装界面，选择“试用不安装”或直接安装均可，前者在进入系统后桌面上有安装程序。<br><img src="2018-11-11-double_system/3.png" alt=""></p><p>默认下一步、下一步直至安装类型选择“其它选项”<br><img src="2018-11-11-double_system/4.png" alt=""><br>接下来我们需要设置许多分区（挂载点）（/boot,/,home,swap交换空间，/usr,等等）</p><p>第一点设置boot挂载点，参考信息如下，是用来存放系统引导的挂载点，大小200MB左右，我分了1GB，图片仅供参考<br><img src="2018-11-11-double_system/5.png" alt=""></p><p>第二点设置交换空间swap，说直白点，硬盘与内存互动的空间，虚拟内存的意思。设置为内存大大小的2倍，我分了8GB<br><img src="2018-11-11-double_system/6.jpg" alt=""></p><p>设置“   /  ”挂载点，大小随你，默认目录，分个8GB差不多，50GB的请分10-15G,我分了20GB<br><img src="2018-11-11-double_system/7.jpg" alt=""></p><p>设置/home用户挂载点，大小10GB，我这里设置了30GB</p><p><img src="2018-11-11-double_system/8.jpg" alt=""></p><p>其余的空间我全部分给/usr了，空间大的话，其他的建议都给个几个GB（其他包括/var等等上main没有提及的），具体干什么用的请百度。</p><p><img src="2018-11-11-double_system/9.jpg" alt=""></p><p>安装启动引导器的设备选择/boot对应的sda号，然后点击下面的现在安装按钮就可以了<br><img src="2018-11-11-double_system/10.jpg" alt=""><br>接下来，选择默认设置，一步一步继续，等待漫长的安装过程。安装完成后，拔出U盘，重启电脑，这时候直接进入原来的Windows系统说明Ubuntu系统已经安装好了，想要使用Ubuntu系统还需要添加引导，网上好多资料都推荐使用easyBCD去添加引导，感兴趣的请自行百度，本文尝试多遍均不能成功，故采用了另一种引导修复的方法吗，果然可以进入Ubuntu系统。我们选择使用一个名为boot-repair的grub修复工具。这个东西很好用的，安装也极其简单，可以说智能帮你一键修复，我也不再多夸它了，下面我们试一试就知道了： </p><p>第一，进入terminel,先通过添加它的 PPA 版本库来安装boot-repair ，命令如下：</p><pre><code>1 sudo apt-get update  # 先更新版本高库，再执行下面2 sudo add-apt-repository ppa:yannubuntu/boot-repair  #添加源</code></pre><p>第二，避免意外，再次更新版本库</p><pre><code>1 sudo apt-get update</code></pre><p>第三，执行安装命令，安装boot-repair</p><pre><code>1 sudo apt-get install -y boot-repair</code></pre><p>第四，安装完毕后就启动应用</p><pre><code>1 boot-repair  # 终端输入后，等几分钟 </code></pre><p>第五，如图，选择推荐修复后，耐心等待几分钟 </p><p><img src="2018-11-11-double_system/11.png" alt=""></p><p>第六，待修复完毕后，直接重启</p><h2 id="二、Linux下安装anaconda"><a href="#二、Linux下安装anaconda" class="headerlink" title="二、Linux下安装anaconda"></a>二、Linux下安装anaconda</h2><p>1、首先下载anaconda3安装包，下载地址：<a href="https://www.anaconda.com/download/#linux" target="_blank" rel="noopener">https://www.anaconda.com/download/#linux</a></p><p>2、打开cmd进入安装包目录下(安装路径：默认即可，也可自定义)</p><p>3、安装anaconda</p><pre><code>sudo bash Anaconda3-5.0.1-Linux-x86_64.sh</code></pre><p>(3) ubuntu18.04启动Anaconda Navigator 图形化界面，本人选择了第二种方法</p><p>方法一：</p><pre><code>$ source ~/anaconda3/bin/activate root$ anaconda-navigator</code></pre><p>方法二：</p><pre><code>$ conda install -c anaconda anaconda-navigator​$ anaconda-navigator</code></pre><p>原文：<a href="https://blog.csdn.net/u013372308/article/details/79235393" target="_blank" rel="noopener">https://blog.csdn.net/u013372308/article/details/79235393</a> </p><h1 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h1><p><a href="https://jingyan.baidu.com/article/4d58d5411380dd9dd5e9c07e.html" target="_blank" rel="noopener">如何安装win10和linux双系统</a></p><p><a href="https://www.cnblogs.com/wj033/p/9420834.html" target="_blank" rel="noopener">记录: Win10+Ubuntu18.04双系统安装</a></p><p><a href="https://blog.csdn.net/weixin_39212776/article/details/81239805" target="_blank" rel="noopener">修复Ubuntu18.04与Windows 10双系统丢失grub引导界面</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如今人工智能越来越火，python语言越来越受到重视，一般在生产环境下，服务器基本都是Liunx的，所以学习Linux系统和Python语言迫在眉睫，而在开始学习之前，我们首先得
      
    
    </summary>
    
    
      <category term="双系统、环境配置、Python" scheme="http://yoursite.com/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E3%80%81%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E3%80%81Python/"/>
    
  </entry>
  
  <entry>
    <title>企业对不同岗位的要求及待遇</title>
    <link href="http://yoursite.com/2018/10/13/dataAnalyse/"/>
    <id>http://yoursite.com/2018/10/13/dataAnalyse/</id>
    <published>2018-10-13T14:53:21.000Z</published>
    <updated>2018-10-13T14:44:57.538Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;毕业季已经到来，想必很多同学也已经找到了心仪的工作，但我想还是有不少人跟我一样还在着急的找工作吧，所谓“知己知彼，百战不殆”，那我今天就随我一起来看看企业对不同岗位各有什么要求吧。</p><h2 id="1、数据格式"><a href="#1、数据格式" class="headerlink" title="1、数据格式"></a>1、数据格式</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先爬取了拉勾网“数据分析师”岗位的招聘信息，奈何拉勾网反爬机制太厉害（还是个人能力不太够），经过一番折腾，获取了300家企业的招聘信息，数据格式如下图所示：<br><img src="2018-10-13-dataAnalyse/data_analyse.jpg" alt=""></p><h2 id="2、数据分析"><a href="#2、数据分析" class="headerlink" title="2、数据分析"></a>2、数据分析</h2><p>接下来就是对获取到的数据的分析了，首先看看这些企业都分布在哪些城市吧</p><p><strong>1.</strong> 地点分布<br><img src="2018-10-13-dataAnalyse/city.png" alt="地点分布"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从图中可以看出，招聘“数据分析师”的企业多数还是集中于大城市，比如北京、上海、杭州、深圳和广州，其比例高达89.6%，想从事数据分析行业的童鞋们应该可以清楚要去哪些城市找工作啦。</p><p><strong>2.</strong> 薪资分布<br><img src="2018-10-13-dataAnalyse/salary.png" alt="薪资分布"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从薪资水平的整体分布来看，大城市的薪资水平明显高于小城市，在大型城市中，薪资的上限与下限也相差较大，其中北京、珠海、上海的薪资位于前三位，而烟台、石家庄和合肥的薪资处于垫底状态，毕竟大城市的消费水平也高嘛，想追求高质量生活的可以向大城市发展（哈哈）</p><p><strong>3.</strong> 职位诱惑/岗位要求</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src="2018-10-13-dataAnalyse/advantage.png" alt="职位诱惑"> <img src="2018-10-13-dataAnalyse/bt.png" alt="岗位要求"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从图中可以看到，企业对待人才的待遇还是不错的，一般都包括五险一金（六险一金的也不少）、年终奖、绩效奖金、福利好等等，对于我们求职者的诱惑还是蛮大的（嘻嘻）；另外，从事数据分析行业，我们同时也需具备一些能力，诸如Python、SQL、Excel这些都是数据分析离不开的工具，企业更青睐于有工作经验的人，毕竟干起活来快嘛，对于学历的要求也是不低的，基本要求都是本科及以上学历。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>好啦，由于本人能力有限，分析呢就这么多啦，总的来说，从事数据分析行业，我们还需去大城市，毕竟大城市实力强，工作机会多，更有利于我们个人的发展</strong></p><h2 id="最后，奉上本人爬虫代码（以后还需完善），仅供参考"><a href="#最后，奉上本人爬虫代码（以后还需完善），仅供参考" class="headerlink" title="最后，奉上本人爬虫代码（以后还需完善），仅供参考"></a>最后，奉上本人爬虫代码（以后还需完善），仅供参考</h2><pre name="code" class="java">import requestsimport jsonfrom requests.exceptions import  RequestExceptionfrom pyquery import PyQuery as pqimport randomfrom urllib.parse import quoteua_list = [        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1",        "Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11",        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6",        "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6",]def get_header(keyword):    user_agent = random.choice(ua_list)    keywords = quote(keyword)    referer = "https://www.lagou.com/jobs/list_"+keywords+"?labelWords=&fromSearch=true&suginput="    headers = {            "User-Agent":user_agent,            "Host":"www.lagou.com",            "Origin":"https://www.lagou.com",            "Referer":referer    }    return headersdef parse_company_page(html):    doc = pq(html)    job_advantage = doc('.job-advantage').text().replace("\n","")    job_bt = doc('.job_bt').text().replace("\n","")    job_dict = {}    job_dict["jobAdvantage"] = job_advantage    job_dict["jobBt"] = job_bt    return job_dictdef get_company_page(id):    company_url = "https://www.lagou.com/jobs/{}.html".format(id)    response = requests.get(company_url,headers=get_header(keyword))    try:        if response.status_code == 200:            return  response.text        return None    except RequestException as e:        print(e)def parse_one_page(html):    results = html["content"]["positionResult"]["result"]    for result in results:        yield {            "companyFullName": result['companyFullName'],            "salary": result['salary'],            "workYear": result['workYear'],            "education": result['education'],            "jobNature": result['jobNature'],            "city": result['city'],            "district": result['district'],            "positionId": result['positionId']        }def get_one_page(url,data):    try:        response = requests.post(url=url,data=data,headers=get_header(keyword))        if response.status_code == 200:            return json.loads(response.text)        return None    except RequestException as e:        print(e)def write_to_file(content):    with open('数据分析师.txt','a',encoding='utf-8') as f:        f.write(json.dumps(content,ensure_ascii=False)+'\n')        f.close()def main(page):    if page == 1:        first = "true"    else:        first = "false"    data={"first":first,          "pn":page,          "kd":keyword}    root_url = "https://www.lagou.com/jobs/positionAjax.json?px=default&needAddtionalResult=false"    html = get_one_page(root_url,data)    if html['success'] == True:        if html['content']['pageNo'] != 0:            for item in parse_one_page(html):                positionId = item['positionId']                html = get_company_page(positionId)                item.update(parse_company_page(html))                write_to_file(item)            return True        else:            return False    else:        print("爬取内容失败",html['msg'])        return  Falseif __name__ == "__main__":    keyword = "数据分析师"    for i in range(20,31):        print("正在爬取第",i,"页的数据")        if main(i) == False:            break    print("获取数据完成")</pre> ]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;毕业季已经到来，想必很多同学也已经找到了心仪的工作，但我想还是有不少人跟我一样还在着急的找工作吧，所谓“知己知彼，百战不殆”，那我今天就随我一起来看看企业对不同岗位各有什么要求吧。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="招聘，待遇，要求" scheme="http://yoursite.com/tags/%E6%8B%9B%E8%81%98%EF%BC%8C%E5%BE%85%E9%81%87%EF%BC%8C%E8%A6%81%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>改变主题：打造属于你的个性网站</title>
    <link href="http://yoursite.com/2018/05/26/%E6%94%B9%E5%8F%98%E4%B8%BB%E9%A2%98%EF%BC%9A%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E6%80%A7%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2018/05/26/改变主题：打造属于你自己的个性网站/</id>
    <published>2018-05-26T14:53:21.000Z</published>
    <updated>2018-05-27T14:31:56.788Z</updated>
    
    <content type="html"><![CDATA[<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个人的喜好不同，所以默认的网站主题肯定满足不了大家的需求了，本节我就来带领大家一起改变主题样式，打造一款符合我们自己风格的个性网站。</p><h2 id="1、挑选我们自己喜爱的主题样式"><a href="#1、挑选我们自己喜爱的主题样式" class="headerlink" title="1、挑选我们自己喜爱的主题样式"></a>1、挑选我们自己喜爱的主题样式</h2><p>  <a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方网站主题样式</a>提供了大量的好看的主题样式，从中挑选我们喜欢的主题样式后，进入其所在的Github页面，复制其所属的http链接，如“<a href="https://github.com/shinux/hexo-theme-adoubi.git”所示，切换到项目根目录下执行git命令下载主题" target="_blank" rel="noopener">https://github.com/shinux/hexo-theme-adoubi.git”所示，切换到项目根目录下执行git命令下载主题</a></p><pre><code>git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/TKL</code></pre><p>下载完成后，会在项目themes目录下生成yelle文件夹</p><p><img src="https://i.imgur.com/XBpMw73.png" alt=""></p><p>然后修改配置文件_config.yml中的theme项，即可使用新主题</p><p><img src="https://i.imgur.com/b5rv4Sy.png" alt=""></p><p>执行以下命令预览主题</p><pre><code>hexo clean &amp;&amp; hexo s</code></pre><h2 id="2、TKL主题下添加about页面"><a href="#2、TKL主题下添加about页面" class="headerlink" title="2、TKL主题下添加about页面"></a>2、TKL主题下添加about页面</h2><p>1）在source目录下生成about文件<br><img src="https://i.imgur.com/jWO8H8H.png" alt=""></p><p>2）使用命令生成文件</p><pre><code>$ hexo g</code></pre><p>3）查看效果</p><pre><code>$ hexo s</code></pre><h2 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h2><p><a href="https://www.jianshu.com/p/c2855934aeec" target="_blank" rel="noopener">Hexo主题设置</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;每个人的喜好不同，所以默认的网站主题肯定满足不了大家的需求了，本节我就来带领大家一起改变主题样式，打造一款符合我们自己风格的个性网站。&lt;/p&gt;
&lt;h2 id=&quot;1、挑选我们自己喜爱的主题
      
    
    </summary>
    
    
      <category term="主题，样式" scheme="http://yoursite.com/tags/%E4%B8%BB%E9%A2%98%EF%BC%8C%E6%A0%B7%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/05/25/hello-world/"/>
    <id>http://yoursite.com/2018/05/25/hello-world/</id>
    <published>2018-05-24T16:00:00.000Z</published>
    <updated>2019-03-08T11:51:53.095Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于Hexo搭建个人网站</title>
    <link href="http://yoursite.com/2018/05/25/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A4%B4%EF%BC%9A%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/05/25/写在开头：我的第一篇博客/</id>
    <published>2018-05-24T16:00:00.000Z</published>
    <updated>2019-03-08T11:52:40.008Z</updated>
    
    <content type="html"><![CDATA[<p>   很高兴看到您的到来，这是我的第一篇博客，当然首先得介绍一下自己是如何一步一步基于Hexo搭建起个人网站的。由于个人电脑是windows系统，所以下面就以Windows为例来介绍如何基于Hexo搭建网站，个人经验，仅供参考</p><h2 id="1、配置博客"><a href="#1、配置博客" class="headerlink" title="1、配置博客"></a>1、配置博客</h2><p>1、下载Git for Windows并安装。下载地址：<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">https://github.com/waylau/git-for-win</a></p><p>2、下载Node.js并安装。下载地址：<a href="https://nodejs.org/en/download" target="_blank" rel="noopener">https://nodejs.org/en/download</a></p><p>3、安装Hexo<br>   打开Git Bash（在任意位置单击右键，选择“Git Bash Here”即可） 执行npm命令即可安装</p><pre><code>$ npm install -g hexo-cli</code></pre><h2 id="2、建站"><a href="#2、建站" class="headerlink" title="2、建站"></a>2、建站</h2><p>   安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre><code>$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install</code></pre><p>   新建完成后，指定文件夹的目录如下：</p><pre><code>.├── _config.yml``├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts —— themes</code></pre><p>   建站完成后，您可以在_config.yml中修改大部分的配置，详细介绍见<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration.html</a></p><h2 id="3、查看效果"><a href="#3、查看效果" class="headerlink" title="3、查看效果"></a>3、查看效果</h2><p>   Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。</p><pre><code>$ npm install hexo-server --save</code></pre><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 下启动。在服务器启动期间Hexo会监视文件变动并自动更新，您无须重启服务器。 </p><pre><code>$ hexo server</code></pre><p>   如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下：</p><pre><code>$ hexo server -p 5000</code></pre><h2 id="4、部署到GitHub"><a href="#4、部署到GitHub" class="headerlink" title="4、部署到GitHub"></a>4、部署到GitHub</h2><h3 id="4-1-申请Github账号"><a href="#4-1-申请Github账号" class="headerlink" title="4.1 申请Github账号"></a>4.1 申请Github账号</h3><h3 id="4-2-新建一个仓库（Repository）"><a href="#4-2-新建一个仓库（Repository）" class="headerlink" title="4.2 新建一个仓库（Repository）"></a>4.2 新建一个仓库（Repository）</h3><p>   注意名称一定是your_username.github.io这样的格式</p><pre><code>1）比如你的用户名是lisi, Repository name里面就填上 lisi.github.io创建新的仓库（repOSitory）点击用户左侧的+号菜单中的New repOSitory（step1)在repOSitory name中输入二级域名，格式请严格遵照username.github.io（step2)是否公开选项可以选取Public（step3)勾选step4处，会自动生成一份可编辑的README.md文件（建议勾选）（step4)点击create repOSitory生成仓库完毕（step5)2）查看新建的仓库（repOSitory）可以回到github个人首页点击右侧的仓库区进入后在step1处选择并复制http地址，注意此时step2处应该是空的</code></pre><p><img src="https://i.imgur.com/lJj4mCH.jpg" alt="新建仓库"></p><h3 id="4-3-配置SSH"><a href="#4-3-配置SSH" class="headerlink" title="4.3 配置SSH"></a>4.3 配置SSH</h3><p>使用hexo博客必须配置SSH。</p><p>打开git bash，输入cd ~/.ssh，如果果提示：No such file or directory 说明未配置SSH。</p><p>本地生成密钥对</p><pre><code>ssh-keygen -t rsa -C &quot;你的邮件地址&quot;，注意命令中的大小写不要搞混。按提示指定保存文件夹，不设置密码。</code></pre><p>添加公钥到Github</p><p>  1）根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。</p><p>  2）登录Github，右上角 头像 -&gt; Settings —&gt; SSH keys —&gt; Add SSH key。把公钥粘贴到key中，填好title并点击 Add key。</p><p>  3）git bash中输入命令ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>，选yes，等待片刻可看到成功提示。</p><p>###4.4 终端上传博客<br>   1）进入终端，安装git上传插件（会提示输入github用户名和密码）</p><pre><code>$ npm install hexo-deployer-git --save</code></pre><p>   2）安装完毕后，输入获取代码</p><pre><code>$ hexo g</code></pre><p>   3）最后上传代码</p><pre><code>$ hexo d</code></pre><p>效果图如下：<br><img src="https://i.imgur.com/SjykyVj.png" alt="Github效果图"></p><p><img src="https://i.imgur.com/loCOmXb.jpg" alt="网站效果图"></p><h1 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h1><p><a href="http://dh629.top/2018/05/11/blog/" target="_blank" rel="noopener">基于hexo搭建个人网站（mac版）</a></p><p><a href="https://www.jianshu.com/p/35e197cb1273" target="_blank" rel="noopener">Hexo搭建Github-Pages博客填坑教程</a></p><p><a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hero官方文档</a></p><h1 id="写在文末："><a href="#写在文末：" class="headerlink" title="写在文末："></a>写在文末：</h1><p>经过上面的步骤，我们第一个博客网站就算建成了，怎么样，还算简单吧。尽管Github的仓库容量有限(仅有1G)，但对于小白来练手已经足够了，在接下来的日子里，我会逐步讲解一下如何美化我们的网站和添加内容。</p><p><strong>至此，第一篇博客就算写完了，希望大家多多指点~</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   很高兴看到您的到来，这是我的第一篇博客，当然首先得介绍一下自己是如何一步一步基于Hexo搭建起个人网站的。由于个人电脑是windows系统，所以下面就以Windows为例来介绍如何基于Hexo搭建网站，个人经验，仅供参考&lt;/p&gt;
&lt;h2 id=&quot;1、配置博客&quot;&gt;&lt;a 
      
    
    </summary>
    
    
  </entry>
  
</feed>
